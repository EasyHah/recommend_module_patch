import type { Query, Vendor, MatchItem, LatLng } from '@/types/recommend';
const toRad=(d:number)=>d*Math.PI/180;
export const haversine=(a:LatLng,b:LatLng)=>{const R=6371;const dLat=toRad(b.lat-a.lat),dLng=toRad(b.lng-a.lng),lat1=toRad(a.lat),lat2=toRad(b.lat);const h=Math.sin(dLat/2)**2+Math.cos(lat1)*Math.cos(lat2)*Math.sin(dLng/2)**2;return 2*R*Math.asin(Math.sqrt(h));}
const clamp=(x:number,lo=0,hi=1)=>Math.max(lo,Math.min(hi,x));
export function hardCheck(q:Query,v:Vendor,d:number){const r:string[]=[];if(q.demand.weightKg>v.capabilities.maxWeightKg)r.push(`重量超过上限(${v.capabilities.maxWeightKg}kg)`);if(!v.capabilities.types.includes(q.demand.type))r.push(`不支持类型 ${q.demand.type}`);if(q.demand.type==='cold'){const c=v.capabilities.cold,t=q.demand.temperature;if(!c||!t)r.push('冷链/温控能力缺失');else if(t[0]<c.min||t[1]>c.max)r.push(`温区不覆盖(${c.min}~${c.max}℃)`);}if(d>v.serviceRadiusKm)r.push(`超出服务半径(${v.serviceRadiusKm}km)`);return{ok:r.length===0,reasons:r};}
export function softScore(q:Query,v:Vendor,d:number){const S_dist=1-clamp(d/50);const S_rate=v.metrics.rating/5;const S_otd=clamp(v.metrics.onTimeRate);const S_price=clamp(1.2-v.metrics.priceIndex,0,1);const S_cap=1-clamp(v.metrics.capacityUtilization);return Math.round(100*(.25*S_dist+.25*S_otd+.2*S_price+.2*S_rate+.1*S_cap));}
export function bucketize(q:Query,v:Vendor,d:number){const b:string[]=[];if(d<=10)b.push('就近优先');if(v.capabilities.cold&&v.capabilities.types.includes('cold'))b.push('冷链认证');if(v.capabilities.maxWeightKg>=10000)b.push('大吨位');if(v.metrics.priceIndex<0.9)b.push('价格友好');if(v.metrics.rating>=4.5)b.push('高评分');return b;}
export function matchVendors(q:Query,vs:Vendor[]):MatchItem[]{return vs.map(v=>{const d=haversine(q.origin,v.location);const {ok,reasons}=hardCheck(q,v,d);const score=ok?softScore(q,v,d):0;const buckets=bucketize(q,v,d);return{vendor:v,distanceKm:Math.round(d*10)/10,feasible:ok,reasons,buckets,score};}).sort((a,b)=>b.score-a.score);}
